version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: shared-postgres
    environment:
      # 主管理員配置
      POSTGRES_DB: postgres
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: adminpassword
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - shared-network

  n8n:
    image: n8nio/n8n:latest
    container_name: shared-n8n
    environment:
      # n8n 資料庫配置
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=n8n_db
      - DB_POSTGRESDB_USER=n8n_user
      - DB_POSTGRESDB_PASSWORD=n8n_password
      
      # n8n 應用配置
      - N8N_BASIC_AUTH_ACTIVE=true
      - N8N_BASIC_AUTH_USER=admin
      - N8N_BASIC_AUTH_PASSWORD=password
      - WEBHOOK_URL=http://localhost:5678
      - GENERIC_TIMEZONE=Asia/Taipei
      - TZ=Asia/Taipei
    ports:
      - "5678:5678"
    volumes:
      - n8n_data:/home/node/.n8n
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "wget --quiet --tries=1 --spider http://localhost:5678/healthz || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - shared-network

  # 示範：未來的應用 API（暫時註解）
  # your-api:
  #   image: your-go-api:latest
  #   container_name: shared-api
  #   environment:
  #     - DB_HOST=postgres
  #     - DB_PORT=5432
  #     - DB_NAME=app_db
  #     - DB_USER=app_user
  #     - DB_PASSWORD=app_password
  #   depends_on:
  #     postgres:
  #       condition: service_healthy
  #   networks:
  #     - shared-network

volumes:
  postgres_data:
  n8n_data:

networks:
  shared-network:
    driver: bridge